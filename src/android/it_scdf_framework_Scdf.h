/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class it_scdf_framework_Scdf */

#ifndef _Included_it_scdf_framework_Scdf
#define _Included_it_scdf_framework_Scdf
#ifdef __cplusplus
extern "C" {
#endif
#undef it_scdf_framework_Scdf_INVALID
#define it_scdf_framework_Scdf_INVALID -1L
#undef it_scdf_framework_Scdf_ACCELEROMETER
#define it_scdf_framework_Scdf_ACCELEROMETER 0L
#undef it_scdf_framework_Scdf_GYROSCOPE
#define it_scdf_framework_Scdf_GYROSCOPE 1L
#undef it_scdf_framework_Scdf_MAGNETOMETER
#define it_scdf_framework_Scdf_MAGNETOMETER 2L
#undef it_scdf_framework_Scdf_PROXIMITY
#define it_scdf_framework_Scdf_PROXIMITY 3L
#undef it_scdf_framework_Scdf_LIGHT
#define it_scdf_framework_Scdf_LIGHT 4L
#undef it_scdf_framework_Scdf_AUDIOINPUT
#define it_scdf_framework_Scdf_AUDIOINPUT 5L
#undef it_scdf_framework_Scdf_NUM_TYPES
#define it_scdf_framework_Scdf_NUM_TYPES 6L
#undef it_scdf_framework_Scdf_SENSOR_SETUP_OK
#define it_scdf_framework_Scdf_SENSOR_SETUP_OK 0L
#undef it_scdf_framework_Scdf_SENSOR_SETUP_OK_CHANGED
#define it_scdf_framework_Scdf_SENSOR_SETUP_OK_CHANGED 1L
#undef it_scdf_framework_Scdf_SENSOR_SETUP_BROKEN
#define it_scdf_framework_Scdf_SENSOR_SETUP_BROKEN -1L
/*
 * Class:     it_scdf_framework_Scdf
 * Method:    IsSensorAvailable
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_it_scdf_framework_Scdf_IsSensorAvailable
  (JNIEnv *, jclass, jint);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    StartSensor
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_StartSensor
  (JNIEnv *, jclass, jint);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    StopSensor
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_StopSensor
  (JNIEnv *, jclass, jint);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    SetupSensor
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_SetupSensor
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    SetupAudioInput
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_SetupAudioInput
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    GetSensorRate
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_GetSensorRate
  (JNIEnv *, jclass, jint);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    GetAudioInputBufferSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_GetAudioInputBufferSize
  (JNIEnv *, jclass);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    GetAudioInputChannels
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_GetAudioInputChannels
  (JNIEnv *, jclass);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    IsSensorActive
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_it_scdf_framework_Scdf_IsSensorActive
  (JNIEnv *, jclass, jint);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    StartAllSensors
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_StartAllSensors
  (JNIEnv *, jclass);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    StopAllSensors
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_StopAllSensors
  (JNIEnv *, jclass);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    StartPreviouslyActiveSensors
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_StartPreviouslyActiveSensors
  (JNIEnv *, jclass);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    SetMasterSensor
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_it_scdf_framework_Scdf_SetMasterSensor
  (JNIEnv *, jclass, jint);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    GetMasterSensor
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_GetMasterSensor
  (JNIEnv *, jclass);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    SetUdpDestinationIp
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_it_scdf_framework_Scdf_SetUdpDestinationIp
  (JNIEnv *, jclass, jstring);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    SetUdpDestinationPort
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_it_scdf_framework_Scdf_SetUdpDestinationPort
  (JNIEnv *, jclass, jint);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    SetUdpOSCmode
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_it_scdf_framework_Scdf_SetUdpOSCmode
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    SetUdpMultiportMode
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_it_scdf_framework_Scdf_SetUdpMultiportMode
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    GetUdpDestinationIp
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_it_scdf_framework_Scdf_GetUdpDestinationIp
  (JNIEnv *, jclass);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    GetUdpDestinationPort
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_it_scdf_framework_Scdf_GetUdpDestinationPort
  (JNIEnv *, jclass);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    IsUdpOSCmodeActive
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_it_scdf_framework_Scdf_IsUdpOSCmodeActive
  (JNIEnv *, jclass);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    IsUdpMultiportModeActive
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_it_scdf_framework_Scdf_IsUdpMultiportModeActive
  (JNIEnv *, jclass);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    OpenUdpConnection
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_it_scdf_framework_Scdf_OpenUdpConnection
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     it_scdf_framework_Scdf
 * Method:    CloseUdpConnection
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_it_scdf_framework_Scdf_CloseUdpConnection
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
